name: Build, Push, and Deploy

on:
  push:
    branches: [ "main" ]

# 워크플로우 전체에서 사용할 환경 변수 설정
env:
  # Docker Hub 이미지 태그를 여기서 관리합니다.
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/zogakzogak:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 21 설정 (LTS 버전으로 변경)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Gradle로 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew bootJar

      # 5. Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}

      # 7. EC2에 접속하여 배포 실행
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/ZogakZogak
            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
            
            docker compose pull
            docker compose up -d --force-recreate
            docker image prune -a -f
